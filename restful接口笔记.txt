第一章 使用同一接口
{
  get是得到一个资源的表述
  put是创建或更新一个资源
  delete是删除一个资源
  post用于创建多个新资源或对资源进行多种其他变更
  
  1、如何保持交互可见性
  /movie/xx_xx_xx
  
  2、delete方法实现幂等：
    需要服务器追踪已删除的资源，否则可能会出现404
    
  3、客户端处理安全和幂等
    把 get options head看成只读，
      任意客户端都可以发送任意次数该请求，否则是服务端实现的错误
    不要重复提交post，除非客户端直到服务端的post是幂等的
    除了post以外的方法都是幂等的
  4、何时使用get
    进行安全和幂等的信息获取
    非要使用get进行数据修改要确保：
      添加cache-control:no-cache头保证响应不被缓存
      确保产生的副作用不会改变关键业务数据
      要实现成可重复执行的，如幂等的
    
  5、何时使用post
    创建新资源，把资源作为一个工厂
    通过一个控制器资源修改一个或多个资源
    执行需要大数据输入的查询
    其他动作不合适的且不安全或非幂等的操作
    post可用于以下场合：
      对已存在的资源做注解
      向公告板、列表等发消息
      提供数据块
      追加操作扩充数据库
   
  6、何时使用put创建新资源
    客户端可以决定资源的uri时使用put创建资源，否则用post
}

第二章：识别资源
{
  
}
第十四章 服务发现
{
  1、如何编写restful web服务的文档
  
  2、如何使用options
  
  
}


    

  























